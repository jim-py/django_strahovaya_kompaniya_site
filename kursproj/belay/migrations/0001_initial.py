# Generated by Django 4.1.1 on 2022-10-26 04:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('otchestvo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Город')),
                ('road', models.CharField(blank=True, max_length=50, null=True, verbose_name='Улица')),
                ('house', models.CharField(blank=True, max_length=10, null=True, verbose_name='Дом')),
                ('flat', models.CharField(blank=True, max_length=10, null=True, verbose_name='Квартира')),
                ('telephone', models.CharField(blank=True, max_length=12, null=True, verbose_name='Телефон')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/%Y/%m/%d/', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('city', models.CharField(max_length=50, verbose_name='Город')),
                ('road', models.CharField(max_length=50, verbose_name='Улица')),
                ('house', models.CharField(max_length=10, verbose_name='Дом')),
                ('office', models.CharField(max_length=10, verbose_name='Офис')),
                ('telephone', models.CharField(max_length=12, verbose_name='Телефон')),
            ],
            options={
                'verbose_name': 'Филиал',
                'verbose_name_plural': 'Филиалы',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('otchestvo', models.CharField(max_length=100, verbose_name='Отчество')),
                ('birthday', models.DateField(verbose_name='Дата рождения')),
                ('city', models.CharField(max_length=50, verbose_name='Город')),
                ('road', models.CharField(max_length=50, verbose_name='Улица')),
                ('house', models.CharField(max_length=10, verbose_name='Дом')),
                ('flat', models.CharField(max_length=10, verbose_name='Квартира')),
                ('telephone', models.CharField(max_length=12, verbose_name='Телефон')),
                ('inn', models.CharField(max_length=12, verbose_name='ИНН')),
                ('passport', models.CharField(max_length=10, verbose_name='Серия и номер')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='ClientEstate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Имущество')),
                ('cost', models.IntegerField(verbose_name='Цена')),
                ('percent', models.IntegerField(verbose_name='Процент от стоимости')),
            ],
            options={
                'verbose_name': 'Имущество клиента',
                'verbose_name_plural': 'Имущества клиентов',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Заголовок')),
                ('description', models.CharField(max_length=300, verbose_name='Текст новости')),
                ('addDate', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='StaffPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Должность')),
                ('salary', models.IntegerField(verbose_name='Зарплата')),
            ],
            options={
                'verbose_name': 'Должность сотрудника',
                'verbose_name_plural': 'Должности сотрудников',
            },
        ),
        migrations.CreateModel(
            name='StaffRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Роль')),
            ],
            options={
                'verbose_name': 'Роль сотрудника',
                'verbose_name_plural': 'Роли сотрудников',
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('long', models.IntegerField(verbose_name='Продолжительность')),
            ],
            options={
                'verbose_name': 'Срок',
                'verbose_name_plural': 'Сроки',
            },
        ),
        migrations.CreateModel(
            name='TypePact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Вид')),
                ('description', models.CharField(max_length=300, verbose_name='Описание')),
                ('stake', models.IntegerField(verbose_name='Ставка агенту (%)')),
                ('cost', models.IntegerField(verbose_name='Цена в год')),
            ],
            options={
                'verbose_name': 'Вид договора',
                'verbose_name_plural': 'Виды договоров',
            },
        ),
        migrations.CreateModel(
            name='Pact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ssum', models.IntegerField(verbose_name='Страховая сумма')),
                ('conclusionDate', models.DateField(verbose_name='Дата заключения')),
                ('archive', models.BooleanField(default=False, verbose_name='Архив')),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='belay.branch', verbose_name='Филиал')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='belay.client', verbose_name='Клиент')),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='belay.term', verbose_name='Срок')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='belay.typepact', verbose_name='Вид')),
            ],
            options={
                'verbose_name': 'Договор',
                'verbose_name_plural': 'Договоры',
            },
        ),
        migrations.AddField(
            model_name='client',
            name='estate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='belay.clientestate', verbose_name='Имущество'),
        ),
        migrations.AddField(
            model_name='staff',
            name='branch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='belay.branch', verbose_name='Филиал'),
        ),
        migrations.AddField(
            model_name='staff',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='staff',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='belay.staffpost', verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='staff',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='belay.staffrole', verbose_name='Роль'),
        ),
        migrations.AddField(
            model_name='staff',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
